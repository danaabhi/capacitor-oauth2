{"version":3,"file":"web-utils.js","sourceRoot":"","sources":["../../src/web-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { OAuth2AuthenticateOptions } from './definitions';\r\n// import sha256 from \"fast-sha256\";\r\n\r\nexport class WebUtils {\r\n  /**\r\n   * Public only for testing\r\n   */\r\n  static getAppId(options: OAuth2AuthenticateOptions): string {\r\n    return this.getOverwritableValue(options, 'appId');\r\n  }\r\n\r\n  static getOverwritableValue<T>(\r\n    options: OAuth2AuthenticateOptions | any,\r\n    key: string,\r\n  ): T {\r\n    let base = options[key];\r\n    if (options.web && key in options.web) {\r\n      base = options.web[key];\r\n    }\r\n    return base;\r\n  }\r\n\r\n  /**\r\n   * Public only for testing\r\n   */\r\n  static getAuthorizationUrl(options: WebOptions): string {\r\n    let url = options.authorizationBaseUrl + '?client_id=' + options.appId;\r\n    url += '&response_type=' + options.responseType;\r\n\r\n    if (options.redirectUrl) {\r\n      url += '&redirect_uri=' + options.redirectUrl;\r\n    }\r\n    if (options.scope) {\r\n      url += '&scope=' + options.scope;\r\n    }\r\n    url += '&state=' + options.state;\r\n\r\n    if (options.additionalParameters) {\r\n      for (const key in options.additionalParameters) {\r\n        url += '&' + key + '=' + options.additionalParameters[key];\r\n      }\r\n    }\r\n\r\n    if (options.pkceCodeChallenge) {\r\n      url += '&code_challenge=' + options.pkceCodeChallenge;\r\n      url += '&code_challenge_method=' + options.pkceCodeChallengeMethod;\r\n    }\r\n    return encodeURI(url);\r\n  }\r\n\r\n  static getTokenEndpointData(options: WebOptions, code: string): string {\r\n    let body = '';\r\n    body +=\r\n      encodeURIComponent('grant_type') +\r\n      '=' +\r\n      encodeURIComponent('authorization_code') +\r\n      '&';\r\n    body +=\r\n      encodeURIComponent('client_id') +\r\n      '=' +\r\n      encodeURIComponent(options.appId) +\r\n      '&';\r\n    body +=\r\n      encodeURIComponent('redirect_uri') +\r\n      '=' +\r\n      encodeURIComponent(options.redirectUrl) +\r\n      '&';\r\n    body += encodeURIComponent('code') + '=' + encodeURIComponent(code) + '&';\r\n    body +=\r\n      encodeURIComponent('code_verifier') +\r\n      '=' +\r\n      encodeURIComponent(options.pkceCodeVerifier);\r\n    return body;\r\n  }\r\n\r\n  /**\r\n   * Public only for testing\r\n   */\r\n  static getUrlParams(url: string): { [x: string]: string } | undefined {\r\n    const urlString = `${url ?? ''}`.trim();\r\n\r\n    if (urlString.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const parsedUrl = new URL(urlString);\r\n    if (!parsedUrl.search && !parsedUrl.hash) {\r\n      return;\r\n    }\r\n\r\n    let urlParamStr;\r\n    if (parsedUrl.search) {\r\n      urlParamStr = parsedUrl.search.substr(1);\r\n    } else {\r\n      urlParamStr = parsedUrl.hash.substr(1);\r\n    }\r\n\r\n    const keyValuePairs: string[] = urlParamStr.split(`&`);\r\n    return keyValuePairs.reduce<{ [x: string]: string } | undefined>(\r\n      (accumulator, currentValue) => {\r\n        const [key, val] = currentValue.split(`=`);\r\n        if (key && key.length > 0) {\r\n          return {\r\n            ...accumulator,\r\n            [key]: decodeURIComponent(val),\r\n          };\r\n        }\r\n      },\r\n      {},\r\n    );\r\n  }\r\n\r\n  static randomString(length = 10): string {\r\n    const haystack =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\r\n    let randomStr;\r\n    if (window.crypto) {\r\n      let numberArray: Uint32Array = new Uint32Array(length);\r\n      window.crypto.getRandomValues(numberArray);\r\n      numberArray = numberArray.map(x =>\r\n        haystack.charCodeAt(x % haystack.length),\r\n      );\r\n\r\n      const stringArray: string[] = [];\r\n      numberArray.forEach(x => {\r\n        stringArray.push(haystack.charAt(x % haystack.length));\r\n      });\r\n      randomStr = stringArray.join('');\r\n    } else {\r\n      randomStr = '';\r\n      for (let i = 0; i < length; i++) {\r\n        randomStr += haystack.charAt(\r\n          Math.floor(Math.random() * haystack.length),\r\n        );\r\n      }\r\n    }\r\n    return randomStr;\r\n  }\r\n\r\n  static async buildWebOptions(\r\n    configOptions: OAuth2AuthenticateOptions,\r\n  ): Promise<WebOptions> {\r\n    const webOptions = new WebOptions();\r\n    webOptions.appId = this.getAppId(configOptions);\r\n    webOptions.authorizationBaseUrl = this.getOverwritableValue(\r\n      configOptions,\r\n      'authorizationBaseUrl',\r\n    );\r\n    webOptions.responseType = this.getOverwritableValue(\r\n      configOptions,\r\n      'responseType',\r\n    );\r\n    if (!webOptions.responseType) {\r\n      webOptions.responseType = 'token';\r\n    }\r\n    webOptions.redirectUrl = this.getOverwritableValue(\r\n      configOptions,\r\n      'redirectUrl',\r\n    );\r\n    // controlling parameters\r\n    webOptions.resourceUrl = this.getOverwritableValue(\r\n      configOptions,\r\n      'resourceUrl',\r\n    );\r\n    webOptions.accessTokenEndpoint = this.getOverwritableValue(\r\n      configOptions,\r\n      'accessTokenEndpoint',\r\n    );\r\n\r\n    webOptions.pkceEnabled = this.getOverwritableValue(\r\n      configOptions,\r\n      'pkceEnabled',\r\n    );\r\n    if (webOptions.pkceEnabled) {\r\n      webOptions.pkceCodeVerifier = this.randomString(64);\r\n      if (CryptoUtils.HAS_SUBTLE_CRYPTO) {\r\n        await CryptoUtils.deriveChallenge(webOptions.pkceCodeVerifier).then(\r\n          c => {\r\n            webOptions.pkceCodeChallenge = c;\r\n            webOptions.pkceCodeChallengeMethod = 'S256';\r\n          },\r\n        );\r\n      } else {\r\n        webOptions.pkceCodeChallenge = webOptions.pkceCodeVerifier;\r\n        webOptions.pkceCodeChallengeMethod = 'plain';\r\n      }\r\n    }\r\n    webOptions.scope = this.getOverwritableValue(configOptions, 'scope');\r\n    webOptions.state = this.getOverwritableValue(configOptions, 'state');\r\n    if (!webOptions.state || webOptions.state.length === 0) {\r\n      webOptions.state = this.randomString(20);\r\n    }\r\n    const parametersMapHelper = this.getOverwritableValue<{\r\n      [key: string]: string;\r\n    }>(configOptions, 'additionalParameters');\r\n    if (parametersMapHelper) {\r\n      webOptions.additionalParameters = {};\r\n      for (const key in parametersMapHelper) {\r\n        if (key && key.trim().length > 0) {\r\n          const value = parametersMapHelper[key];\r\n          if (value && value.trim().length > 0) {\r\n            webOptions.additionalParameters[key] = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const headersMapHelper = this.getOverwritableValue<{\r\n      [key: string]: string;\r\n    }>(configOptions, 'additionalResourceHeaders');\r\n    if (headersMapHelper) {\r\n      webOptions.additionalResourceHeaders = {};\r\n      for (const key in headersMapHelper) {\r\n        if (key && key.trim().length > 0) {\r\n          const value = headersMapHelper[key];\r\n          if (value && value.trim().length > 0) {\r\n            webOptions.additionalResourceHeaders[key] = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    webOptions.logsEnabled = this.getOverwritableValue(\r\n      configOptions,\r\n      'logsEnabled',\r\n    );\r\n\r\n    return webOptions;\r\n  }\r\n\r\n  static buildWindowOptions(\r\n    configOptions: OAuth2AuthenticateOptions,\r\n  ): WebOptions {\r\n    const windowOptions = new WebOptions();\r\n    if (configOptions.web) {\r\n      if (configOptions.web.windowOptions) {\r\n        windowOptions.windowOptions = configOptions.web.windowOptions;\r\n      }\r\n      if (configOptions.web.windowTarget) {\r\n        windowOptions.windowTarget = configOptions.web.windowTarget;\r\n      }\r\n    }\r\n    return windowOptions;\r\n  }\r\n\r\n  static getTokenEndpointDataForRefreshToken(webOptions: WebOptions, refreshToken: string): string {\r\n    const params = new URLSearchParams();\r\n    params.append('grant_type', 'refresh_token');\r\n    params.append('refresh_token', refreshToken);\r\n    if (webOptions.appId) {\r\n      params.append('client_id', webOptions.appId);\r\n    }\r\n    return params.toString();\r\n  }\r\n}\r\n\r\nexport class CryptoUtils {\r\n  static BASE64_CHARS =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  static HAS_SUBTLE_CRYPTO: boolean =\r\n    typeof window !== 'undefined' &&\r\n    !!(window.crypto as any) &&\r\n    !!(window.crypto.subtle as any);\r\n\r\n  static toUint8Array(str: string): Uint8Array {\r\n    const buf = new ArrayBuffer(str.length);\r\n    const bufView = new Uint8Array(buf);\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return bufView;\r\n  }\r\n\r\n  static toBase64Url(base64: string): string {\r\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n  }\r\n\r\n  static toBase64(bytes: Uint8Array): string {\r\n    const len = bytes.length;\r\n    let base64 = '';\r\n    for (let i = 0; i < len; i += 3) {\r\n      base64 += this.BASE64_CHARS[bytes[i] >> 2];\r\n      base64 += this.BASE64_CHARS[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n      base64 +=\r\n        this.BASE64_CHARS[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n      base64 += this.BASE64_CHARS[bytes[i + 2] & 63];\r\n    }\r\n\r\n    if (len % 3 === 2) {\r\n      base64 = base64.substring(0, base64.length - 1) + '=';\r\n    } else if (len % 3 === 1) {\r\n      base64 = base64.substring(0, base64.length - 2) + '==';\r\n    }\r\n    return base64;\r\n  }\r\n\r\n  static deriveChallenge(codeVerifier: string): Promise<string> {\r\n    if (codeVerifier.length < 43 || codeVerifier.length > 128) {\r\n      return Promise.reject(new Error('ERR_PKCE_CODE_VERIFIER_INVALID_LENGTH'));\r\n    }\r\n    if (!CryptoUtils.HAS_SUBTLE_CRYPTO) {\r\n      return Promise.reject(new Error('ERR_PKCE_CRYPTO_NOTSUPPORTED'));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      crypto.subtle.digest('SHA-256', this.toUint8Array(codeVerifier)).then(\r\n        arrayBuffer => {\r\n          return resolve(\r\n            this.toBase64Url(this.toBase64(new Uint8Array(arrayBuffer))),\r\n          );\r\n        },\r\n        error => reject(error),\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport class WebOptions {\r\n  appId: string;\r\n  authorizationBaseUrl: string;\r\n  accessTokenEndpoint: string;\r\n  resourceUrl: string;\r\n  responseType: string;\r\n  scope: string;\r\n  state: string;\r\n  redirectUrl: string;\r\n  logsEnabled: boolean;\r\n  windowOptions: string;\r\n  windowTarget = '_blank';\r\n\r\n  pkceEnabled: boolean;\r\n  pkceCodeVerifier: string;\r\n  pkceCodeChallenge: string;\r\n  pkceCodeChallengeMethod: string;\r\n\r\n  additionalParameters: { [key: string]: string };\r\n  additionalResourceHeaders: { [key: string]: string };\r\n}\r\n"]}